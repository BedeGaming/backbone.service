{"version":3,"file":"backbone.service.js","sources":["backbone.service.js","/source/backbone.service.js"],"names":["global","factory","exports","module","require","define","amd","Backbone","Service","Radio","_","this","backbone_service","Model","extend","call","Channel","constructor","props","each","value","name","once","_this","isFunction","Promise","resolve","start","then","_this2","apply","_arguments","arguments","reply","comply","initialize"],"mappings":"AAAA,AAAC,CCAA,ADAA,SCAUA,CDAA,CCAQC,GACE,EDDJ,EAAE,OAAO,EAAE,GCCnBC,UAA0C,mBAAXC,QAAyBA,OAAOD,QAAUD,EAAQG,QAAQ,YAAaA,QAAQ,kBAAmBA,QAAQ,eAC9H,kBAAXC,SAAyBA,OAAOC,IAAMD,QAAQ,WAAY,iBAAkB,cAAeJ,GAClGD,EAAOO,SAASC,QAAUP,EAAQD,EAAOO,SAAUP,EAAOS,MAAOT,EAAOU,IACxEC,KAAM,SAAUJ,EAAUE,EAAOC,GAAK,YAEtC,IAAIE,GAAmBL,EAASM,MAAMC,OAAOC,KAAKN,EAAMO,SAMtDC,YAAW,SAACC,aACVR,GAAES,KAAKD,EAAO,SAACE,EAAOC,GAEP,UAATA,IACFD,EAAQV,EAAEY,KAAKF,IAIjBG,EAAKF,GAAQD,EAGRV,EAAEc,WAAWJ,IAAmB,eAATC,IAK1BD,EADW,UAATC,EACM,iCAEN,OAAOI,SAAQC,QAAQf,KAAKgB,SAASC,KAAK,WACxC,MAAOC,GAAKR,GAAIS,MAACD,EAAAE,MAIb,WACN,MAAON,SAAQC,QAAQf,KAAKgB,MAAKG,MAAVnB,KAAcqB,aAKzCT,EAAKU,MAAMZ,EAAMD,GACjBG,EAAKW,OAAOb,EAAMD,OAQtBe,WAAU,aAMVR,MAAK,cAGP,OAAOf;AD1DP,SAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,OAAO,CAAC,gBAAgB,CAAC,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC,GAC9J,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,UAAU,EAAE,gBAAgB,EAAE,YAAY,CAAC,EAAE,OAAO,CAAC,GAC1G,MAAM,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,CAAA;CAC3E,CAAA,CAAC,IAAI,EAAE,UAAU,QAAQ,EAAE,KAAK,EAAE,CAAC,EAAE;AAAE,cAAY,CAAC;;AAEnD,MAAI,gBAAgB,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;;;;;;AAM/D,eAAW,EAAA,qBAAC,KAAK,EAAE;;;AACjB,OAAC,CAAC,IAAI,CAAC,KAAK,EAAE,UAAC,KAAK,EAAE,IAAI,EAAK;;AAE7B,YAAI,IAAI,KAAK,OAAO,EAAE;AACpB,eAAK,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACvB;;;AAGD,cAAK,IAAI,CAAC,GAAG,KAAK,CAAC;;;AAGnB,YAAI,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK,YAAY,EAAE;AACjD,iBAAO;SACR;;AAED,YAAI,IAAI,KAAK,OAAO,EAAE;AACpB,eAAK,GAAG,YAAW;;;;;AAEjB,mBAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,YAAM;AAC9C,qBAAO,OAAK,IAAI,OAAC,oBAAc,CAAC;aACjC,CAAC,CAAC;WACJ,CAAC;SACH,MAAM;AACL,eAAK,GAAG,YAAW;AACjB,mBAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,MAAA,CAAV,IAAI,EAAU,SAAS,CAAC,CAAC,CAAC;WAClD,CAAC;SACH;;;AAGD,cAAK,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACxB,cAAK,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;OAC1B,CAAC,CAAC;KACJ;;;;;;AAMD,cAAU,EAAA,sBAAG,EAAE;;;;;;AAMf,SAAK,EAAA,iBAAG,EAAE;GACX,CAAC,CAAC;;AAEH,SAAO,gBAAgB,CAAC;CAEzB,CAAC,CAAE","sourceRoot":"/source/","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('backbone'), require('backbone.radio'), require('underscore')) :\n  typeof define === 'function' && define.amd ? define(['backbone', 'backbone.radio', 'underscore'], factory) :\n  global.Backbone.Service = factory(global.Backbone, global.Radio, global._)\n}(this, function (Backbone, Radio, _) { 'use strict';\n\n  var backbone_service = Backbone.Model.extend.call(Radio.Channel, {\n\n    /**\n     * @constructs Service\n     * @param {Object} methods\n     */\n    constructor(props) {\n      _.each(props, (value, name) => {\n        // start method should only ever be called once.\n        if (name === 'start') {\n          value = _.once(value);\n        }\n\n        // Add the property directly to the service object.\n        this[name] = value;\n\n        // Leave non-functions and initialize() as is.\n        if (!_.isFunction(value) || name === 'initialize') {\n          return;\n        }\n\n        if (name !== 'start') {\n          value = function() {\n            // Ensure service is always started.\n            return Promise.resolve(this.start()).then(() => {\n              return this[name](...arguments);\n            });\n          };\n        } else {\n          value = function() {\n            return Promise.resolve(this.start(...arguments));\n          };\n        }\n\n        // Register as both a Request and Command for convenience.\n        this.reply(name, value);\n        this.comply(name, value);\n      });\n    },\n\n    /**\n     * @abstract\n     * @method initialize\n     */\n    initialize() {},\n\n    /**\n     * @abstract\n     * @method start\n     */\n    start() {}\n  });\n\n  return backbone_service;\n\n}));\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('backbone'), require('backbone.radio'), require('underscore')) :\n  typeof define === 'function' && define.amd ? define(['backbone', 'backbone.radio', 'underscore'], factory) :\n  global.Backbone.Service = factory(global.Backbone, global.Radio, global._)\n}(this, function (Backbone, Radio, _) { 'use strict';\n\n  var backbone_service = Backbone.Model.extend.call(Radio.Channel, {\n\n    /**\n     * @constructs Service\n     * @param {Object} methods\n     */\n    constructor(props) {\n      _.each(props, (value, name) => {\n        // start method should only ever be called once.\n        if (name === 'start') {\n          value = _.once(value);\n        }\n\n        // Add the property directly to the service object.\n        this[name] = value;\n\n        // Leave non-functions and initialize() as is.\n        if (!_.isFunction(value) || name === 'initialize') {\n          return;\n        }\n\n        if (name !== 'start') {\n          value = function() {\n            // Ensure service is always started.\n            return Promise.resolve(this.start()).then(() => {\n              return this[name](...arguments);\n            });\n          };\n        } else {\n          value = function() {\n            return Promise.resolve(this.start(...arguments));\n          };\n        }\n\n        // Register as both a Request and Command for convenience.\n        this.reply(name, value);\n        this.comply(name, value);\n      });\n    },\n\n    /**\n     * @abstract\n     * @method initialize\n     */\n    initialize() {},\n\n    /**\n     * @abstract\n     * @method start\n     */\n    start() {}\n  });\n\n  return backbone_service;\n\n}));\n"]}