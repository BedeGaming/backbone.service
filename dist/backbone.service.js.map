{"version":3,"sources":["backbone.service.js"],"names":[],"mappings":"AAAA,AAAC,CAAA,UAAU,MAAM,EAAE,OAAO,EAAE;AAC1B,SAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,yBAAyB,CAAC,EAAE,OAAO,CAAC,yBAAyB,CAAC,EAAE,OAAO,CAAC,gBAAgB,CAAC,EAAE,OAAO,CAAC,YAAY,CAAC,EAAE,OAAO,CAAC,aAAa,CAAC,CAAC,GACzO,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,yBAAyB,EAAE,yBAAyB,EAAE,gBAAgB,EAAE,YAAY,EAAE,aAAa,CAAC,EAAE,OAAO,CAAC,GACnK,MAAM,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,eAAe,CAAC,CAAA;CACzH,CAAA,CAAC,IAAI,EAAE,UAAU,QAAQ,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC,EAAE,eAAe,EAAE;AAAE,cAAY,CAAC;;AAEnF,MAAM,QAAQ,GAAG,eAAe,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;;AAEnD,OAAK,CAAC,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;;;;;;;;AAQxC,WAAS,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE;AACtC,QAAI,IAAI,GAAG,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;;AAExC,KAAC,CAAC,IAAI,CAAC,IAAI,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AACzB,UAAI,CAAC,GAAG,CAAC,GAAG,YAAa;0CAAT,IAAI;AAAJ,cAAI;;;AAClB,eAAO,KAAK,EAAE,CACX,IAAI,CAAC;iBAAM,OAAO,CAAC,GAAG,OAAC,CAAZ,OAAO,EAAS,IAAI,CAAC;SAAA,CAAC,SAC5B,CAAC,UAAA,GAAG,EAAI;AACZ,iBAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACrB,gBAAM,GAAG,CAAC;SACX,CAAC,CAAC;OACN,CAAC;KACH,CAAC,CAAC;;AAEH,WAAO,IAAI,CAAC;GACb;;;;;AAKD,MAAI,gBAAgB,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;;;;AAI1C,eAAW,EAAA,uBAAG;;;AACZ,UAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC;eAAM,QAAQ,CAAC,IAAI,CAAC;iBAAM,MAAK,KAAK,EAAE;SAAA,CAAC;OAAA,CAAC,CAAC;;AAE5D,UAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;AACjD,UAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;;AAEjD,UAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AACrB,UAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AACtB,UAAI,CAAC,MAAM,MAAA,CAAX,IAAI,EAAW,SAAS,CAAC,CAAC;KAC3B;;;;;;AAMD,SAAK,EAAA,iBAAG,EAAE;;;;;;AAMV,SAAK,EAAA,iBAAG,EAAE;;;;;;AAMV,WAAO,EAAA,mBAAG,EAAE;GACb,CAAC,CAAC;;AAEH,SAAO,gBAAgB,CAAC;CAEzB,CAAC,CAAE","file":"backbone.service.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('backbone-metal-classify'), require('backbone-normalize-hash'), require('backbone.radio'), require('underscore'), require('es6-promise')) :\n  typeof define === 'function' && define.amd ? define(['backbone-metal-classify', 'backbone-normalize-hash', 'backbone.radio', 'underscore', 'es6-promise'], factory) :\n  global.Backbone.Service = factory(global.classify, global.normalizeHash, global.Radio, global._, global.PromisePolyfill)\n}(this, function (classify, normalizeHash, Radio, _, PromisePolyfill) { 'use strict';\n\n  const resolved = PromisePolyfill.Promise.resolve();\n\n  Radio.Channel = classify(Radio.Channel);\n\n  /**\n   * @private\n   * @method wrapHash\n   * @param {Object} hash\n   * @param {Function} start\n   */\n  function wrapHash(service, type, start) {\n    let hash = normalizeHash(service, type);\n\n    _.each(hash, (val, key) => {\n      hash[key] = (...args) => {\n        return start()\n          .then(() => service[key](...args))\n          .catch(err => {\n            service.onError(err);\n            throw err;\n          });\n      };\n    });\n\n    return hash;\n  }\n\n  /**\n   * @class Service\n   */\n  var backbone_service = Radio.Channel.extend({\n    /**\n     * @constructs Service\n     */\n    constructor() {\n      let start = _.once(() => resolved.then(() => this.start()));\n\n      let requests = wrapHash(this, 'requests', start);\n      let commands = wrapHash(this, 'commands', start);\n\n      this.reply(requests);\n      this.comply(commands);\n      this._super(...arguments);\n    },\n\n    /**\n     * @abstract\n     * @method setup\n     */\n    setup() {},\n\n    /**\n     * @abstract\n     * @method start\n     */\n    start() {},\n\n    /**\n     * @abstract\n     * @method onError\n     */\n    onError() {}\n  });\n\n  return backbone_service;\n\n}));\n"],"sourceRoot":"/source/"}