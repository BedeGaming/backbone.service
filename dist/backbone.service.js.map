{"version":3,"sources":["backbone.service.js"],"names":[],"mappings":"AAAA,AAAC,CAAA,UAAU,MAAM,EAAE,OAAO,EAAE;AAC1B,SAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,OAAO,CAAC,gBAAgB,CAAC,EAAE,OAAO,CAAC,YAAY,CAAC,EAAE,OAAO,CAAC,aAAa,CAAC,CAAC,GACtL,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,UAAU,EAAE,gBAAgB,EAAE,YAAY,EAAE,aAAa,CAAC,EAAE,OAAO,CAAC,GACzH,MAAM,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,eAAe,CAAC,CAAA;CACnG,CAAA,CAAC,IAAI,EAAE,UAAU,QAAQ,EAAE,KAAK,EAAE,CAAC,EAAE,eAAe,EAAE;AAAE,cAAY,CAAC;;AAEpE,MAAM,QAAQ,GAAG,eAAe,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;;;;;AAKnD,MAAI,gBAAgB,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;;;;;;AAM/D,eAAW,EAAA,qBAAC,KAAK,EAAE;;;AACjB,OAAC,CAAC,IAAI,CAAC,KAAK,EAAE,UAAC,KAAK,EAAE,IAAI,EAAK;;AAE7B,cAAK,IAAI,CAAC,GAAG,KAAK,CAAC;;;AAGnB,YAAI,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK,YAAY,EAAE;AACjD,iBAAO;SACR;;AAED,YAAI,IAAI,KAAK,OAAO,EAAE;AACpB,eAAK,GAAG,YAAW;;;;;AAEjB,mBAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC;qBAAM,OAAK,IAAI,OAAC,oBAAc;aAAA,CAAC,CAAC;WACnE,CAAC;SACH,MAAM;;AAEL,eAAK,GAAG,CAAC,CAAC,IAAI,CAAC;mBAAM,QAAQ,CAAC,IAAI,CAAC;qBAAM,MAAK,KAAK,EAAE;aAAA,CAAC;WAAA,CAAC,CAAC;SACzD;;;AAGD,cAAK,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACxB,cAAK,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;OAC1B,CAAC,CAAC;KACJ;;;;;;AAMD,cAAU,EAAA,sBAAG,EAAE;;;;;;AAMf,SAAK,EAAA,iBAAG,EAAE;GACX,CAAC,CAAC;;AAEH,SAAO,gBAAgB,CAAC;CAEzB,CAAC,CAAE","file":"backbone.service.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('backbone'), require('backbone.radio'), require('underscore'), require('es6-promise')) :\n  typeof define === 'function' && define.amd ? define(['backbone', 'backbone.radio', 'underscore', 'es6-promise'], factory) :\n  global.Backbone.Service = factory(global.Backbone, global.Radio, global._, global.PromisePolyfill)\n}(this, function (Backbone, Radio, _, PromisePolyfill) { 'use strict';\n\n  const resolved = PromisePolyfill.Promise.resolve();\n\n  /**\n   * @class Service\n   */\n  var backbone_service = Backbone.Model.extend.call(Radio.Channel, {\n\n    /**\n     * @constructs Service\n     * @param {Object} methods\n     */\n    constructor(props) {\n      _.each(props, (value, name) => {\n        // Add the property directly to the service object.\n        this[name] = value;\n\n        // Leave non-functions and initialize() as is.\n        if (!_.isFunction(value) || name === 'initialize') {\n          return;\n        }\n\n        if (name !== 'start') {\n          value = function() {\n            // Ensure service is always started.\n            return this.request('start').then(() => this[name](...arguments));\n          };\n        } else {\n          // start method should only ever be called once.\n          value = _.once(() => resolved.then(() => this.start()));\n        }\n\n        // Register as both a Request and Command for convenience.\n        this.reply(name, value);\n        this.comply(name, value);\n      });\n    },\n\n    /**\n     * @abstract\n     * @method initialize\n     */\n    initialize() {},\n\n    /**\n     * @abstract\n     * @method start\n     */\n    start() {}\n  });\n\n  return backbone_service;\n\n}));\n"],"sourceRoot":"/source/"}